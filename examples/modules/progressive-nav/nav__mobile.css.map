{"version":3,"sources":["../lib/sass/fear-core-ui/typography/_variables.scss","../lib/sass/fear-core-ui/utilities/measurements/_functions.scss","modules/progressive-nav/nav__mobile.css","../lib/sass/fear-core-ui/modules/progressive-nav/_module_nav__horizontal--mobile.scss","../lib/sass/fear-core-ui/utilities/flexbox/_mixin_flexbox.scss","../lib/sass/fear-core-ui/utilities/_ie-only.scss","../lib/sass/fear-core-ui/utilities/flexbox/_mixin_flexbox-fallback.scss","../lib/sass/fear-core-ui/modules/progressive-nav/_variables.scss"],"names":[],"mappings":"AAAA,yBAAyB;AAEzB;;;EAGE;AAGF;;;EAGE;AAGF;;;GAGG;AAGH;;;EAGE;AAvBF,yBAAyB;AAEzB;;;EAGE;AAGF;;;EAGE;AAGF;;;GAGG;AAGH;;;EAGE;ACrBF;;WAEW;ACiCX,+IAA+I;ACpC7I;ECKA,qBDF2B;ECE3B,sBDF2B;ECE3B,qBDF2B;ECE3B,cDF2B;EACrB,eAAe;CAChB;;ADqCP,iIAAiI;AG3B/H;ECZI,eAAe;CAChB;;AJ2CL,iIAAiI;AGhC/H;ECRI,oBAAoB;EACpB,oBAAoB;EACpB,aAAa;CAKd;;AJwCL,kIAAkI;AGvChI;ECHM,oBAAoB;CACrB;;AJ8CP,gJAAgJ;AC3D9I;EASI,cAAc;CACf;;ADsDL,gJAAgJ;AChDhJ;EACE,eAAe;CAChB;;ADmDD,gJAAgJ;ACjDhJ;ECRE,6BDS8B;ECT9B,8BDS8B;ECT9B,+BDS8B;ECT9B,2BDS8B;ECT9B,uBDS8B;EAC9B,mBAAmB;EACnB,UIxBe;EJyBf,QAAQ;EACR,cAAc;CAef;;ADsCD,gJAAgJ;AC1DhJ;EAiBM,eAAe;CAChB","file":"modules/progressive-nav/nav__mobile.css","sourcesContent":["/** * @group Font size */\n$base-font-size: 16;\n/**\n* Body font size for large devices (desktop)\n* @group Font size\n*/\n$base-font-size-lg: 15;\n\n/**\n* Body font size for tsop devices (desktop)\n* @group Font size\n*/\n$base-font-size-tsop: 18;\n\n/**\n* Body font size for small devices (desktop)\n* @group Font size\n */\n$base-font-size-sm: 15;\n\n/**\n* Body font size for small devices (mobile/tablet)\n* @group Font families\n*/\n$font__didot--roman: 'didot-roman', Garamond, 'Times New Roman', serif;\n$font__didot--italic: 'didot-italic', Garamond, 'Times New Roman', serif;\n$font__didot--bold: 'didot-bold', Garamond, 'Times New Roman', serif;\n$font__didot--bold-italic: 'didot-bold-italic', Garamond, 'Times New Roman', serif;\n$font__icons: 'mns-icons';\n// new fonts\n$font__mns-london: 'mns-london', Helvetica, Arial, sans-serif;\n$font__mns-london--bold: 'mns-london-bold', Helvetica, Arial, sans-serif;\n$font__mns-london--light: 'mns-london-light', Helvetica, Arial, sans-serif;\n\n","@import '../../typography/variables';\n\n/* --------\nFunctions\n-------- */\n\n/// Return EM from PX input\n/// @group Measurements\n@function calculateEm($size) {\n  $emSize: $size / $base-font-size * 1em;\n  @return $emSize;\n}\n\n//*refactor* consider removing, calculateEM can be used\n@function calculateRem($size) {\n  $remSize: $size / 10 * 1rem;\n  @return $remSize;\n}\n\n/// Returns boolean\n/// @group Measurements\n@function parseInt($n) {\n  @return $n / ($n * 0 + 1);\n}\n","/** * @group Font size */\n/**\n* Body font size for large devices (desktop)\n* @group Font size\n*/\n/**\n* Body font size for tsop devices (desktop)\n* @group Font size\n*/\n/**\n* Body font size for small devices (desktop)\n* @group Font size\n */\n/**\n* Body font size for small devices (mobile/tablet)\n* @group Font families\n*/\n/** * @group Font size */\n/**\n* Body font size for large devices (desktop)\n* @group Font size\n*/\n/**\n* Body font size for tsop devices (desktop)\n* @group Font size\n*/\n/**\n* Body font size for small devices (desktop)\n* @group Font size\n */\n/**\n* Body font size for small devices (mobile/tablet)\n* @group Font families\n*/\n/* --------\nFunctions\n-------- */\n/* line 4, /Users/Caylam/Development/MS/code/fear-core-ui/lib/sass/fear-core-ui/modules/progressive-nav/_module_nav__horizontal--mobile.scss */\n#m-nav-trigger:checked + .m-nav {\n  display: flex;\n  display: block;\n}\n\n/* line 4, /Users/Caylam/Development/MS/code/fear-core-ui/lib/sass/fear-core-ui/utilities/flexbox/_mixin_flexbox-fallback.scss */\n.ie9 #m-nav-trigger:checked + .m-nav::before {\n  display: table;\n}\n\n/* line 8, /Users/Caylam/Development/MS/code/fear-core-ui/lib/sass/fear-core-ui/utilities/flexbox/_mixin_flexbox-fallback.scss */\n.ie9 #m-nav-trigger:checked + .m-nav > *:not([hidden]) {\n  display: table-cell;\n  vertical-align: top;\n  height: 100%;\n}\n\n/* line 13, /Users/Caylam/Development/MS/code/fear-core-ui/lib/sass/fear-core-ui/utilities/flexbox/_mixin_flexbox-fallback.scss */\n.ie9 #m-nav-trigger:checked + .m-nav > *:not([hidden])::before {\n  display: table-cell;\n}\n\n/* line 10, /Users/Caylam/Development/MS/code/fear-core-ui/lib/sass/fear-core-ui/modules/progressive-nav/_module_nav__horizontal--mobile.scss */\n#m-nav-trigger + .m-nav {\n  display: none;\n}\n\n/* line 18, /Users/Caylam/Development/MS/code/fear-core-ui/lib/sass/fear-core-ui/modules/progressive-nav/_module_nav__horizontal--mobile.scss */\n.m-nav-hamburger {\n  display: block;\n}\n\n/* line 22, /Users/Caylam/Development/MS/code/fear-core-ui/lib/sass/fear-core-ui/modules/progressive-nav/_module_nav__horizontal--mobile.scss */\n.m-nav {\n  flex-direction: column;\n  position: absolute;\n  top: 3rem;\n  left: 0;\n  display: none;\n}\n\n/* line 38, /Users/Caylam/Development/MS/code/fear-core-ui/lib/sass/fear-core-ui/modules/progressive-nav/_module_nav__horizontal--mobile.scss */\n.m-nav > li [href^=\"#\"] {\n  display: block;\n}\n","@mixin mobileMenu($id) {\n  ##{$id} {\n    &:checked {\n      + .m-nav {\n        @include display(flex);\n        display: block;\n      }\n    }\n\n    + .m-nav {\n      display: none;\n    }\n  }\n}\n\n@include mobileMenu(m-nav-trigger);\n\n.m-nav-hamburger {\n  display: block;\n}\n\n.m-nav {\n  @include flex-direction(column);\n  position: absolute;\n  top: $nav-height;\n  left: 0;\n  display: none;\n\n  //&:target {\n  //  @include display(flex);\n  //  //display: block;\n  //}\n\n  > li {\n    //@include pointer-events--none('> a ');\n\n    // hide desktop links\n    [href^=\"#\"] {\n      display: block;\n    }\n  }\n}\n","// scss-lint:disable EmptyLineBetweenBlocks\n\n@mixin display($value) {\n  @include ie-only(9) {\n    @include display-fallback($value);\n  }\n  display: $value;\n}\n\n@mixin flex-direction($direction) {\n  @include ie-only(9) {\n    //@include flex-direction-fallback($direction);\n  }\n  flex-direction: $direction;\n}\n\n@mixin flex-wrap($wrap) {\n  @include ie-only(9) {\n    //@include flex-wrap-fallback($wrap);\n  }\n  flex-wrap: $wrap;\n}\n\n@mixin justify-content($position) {\n  @include ie-only(9) {\n    @include justify-content-fallback($position);\n  }\n  justify-content: $position;\n}\n\n@mixin align-items($position) {\n  @include ie-only(9) {\n    //@include align-items-fallback($position);\n  }\n  align-items: $position;\n}\n\n@mixin align-content($position) {\n  @include ie-only(9) {\n    //@include align-content-fallback($position);\n  }\n  align-content: $position;\n}\n\n@mixin flex-grow($value) {\n  @include ie-only(9) {\n    @include flex-grow-fallback;\n  }\n  flex-grow: $value;\n}\n\n@mixin flex-shrink($value) {\n  @include ie-only(9) {\n    //@include flex-shrink-fallback;\n  }\n  flex-shrink: $value;\n}\n\n@mixin align-self($position) {\n  @include ie-only(9) {\n    //@include align-self-fallback($position);\n  }\n  align-self: $position;\n}\n","@mixin ie-only($versions...) {\n\n  $versionList: '';\n\n  @if length($versions) == 0 {\n    $versionList: '.ie &';\n  } @else {\n    @each $version in $versions {\n      @if $versionList != '' {\n        $versionList: $versionList + ', ';\n      }\n\n      $versionList: $versionList + '.ie' + $version + ' &';\n    }\n  }\n\n  #{$versionList} {\n    @content;\n  }\n}\n","@mixin display-fallback($value) {\n  @if $value == flex {\n\n    &::before {\n      display: table;\n    }\n\n    > *:not([hidden]) {\n      display: table-cell;\n      vertical-align: top;\n      height: 100%;\n\n      &::before {\n        display: table-cell;\n      }\n    }\n  }\n}\n\n@mixin flex-direction-fallback($direction) {\n  @if $direction == row {\n    display: inline-block;\n  }\n\n  @if $direction == row-reverse {\n\n    direction: rtl;\n\n    > * {\n      display: inline-block;\n    }\n\n  }\n\n  @if $direction == column {\n\n    display: block;\n\n  }\n\n  @if $direction == column-reverse {\n    @extend %flex-reverse-fallback;\n\n    > * {\n      @extend %flex-reverse-fallback;\n      display: block;\n    }\n\n  }\n}\n\n@mixin flex-wrap-fallback($wrap) {\n  @if $wrap == nowrap {\n    display: table;\n\n    > * {\n      display: table-cell;\n    }\n  }\n\n  @if $wrap == wrap {\n    display: inline-block;\n  }\n\n  @if $wrap == wrap-reverse {\n    @extend %flex-reverse-fallback;\n\n    > * {\n      @extend %flex-reverse-fallback;\n      display: inline-block;\n    }\n  }\n}\n\n@mixin justify-content-fallback($position) {\n  @if $position == flex-start {\n    display: inline-block;\n  }\n\n  @if $position == flex-end {\n    text-align: right;\n\n    > * {\n      display: inline-block;\n    }\n  }\n\n  @if $position == center {\n\n    text-align: center;\n\n    > * {\n      text-align: left;\n      display: inline-block !important;\n    }\n  }\n\n  @if $position == space-between {\n    text-align: justify;\n\n    &::after {\n      content: '';\n      display: inline-block;\n      width: 100%;\n    }\n\n    > * {\n      display: inline-block;\n    }\n  }\n\n  @if $position == space-around {\n    display: table;\n\n    > * {\n      display: table-cell;\n      text-align: center;\n    }\n  }\n}\n\n@mixin align-items-fallback($position) {\n  @if $position == flex-start {\n    display: inline-block;\n  }\n\n  @if $position == flex-end {\n    display: table;\n\n    > * {\n      display: table-cell;\n      vertical-align: bottom;\n    }\n  }\n\n  @if $position == center {\n    display: table;\n\n    > * {\n      display: table-cell;\n      vertical-align: middle;\n    }\n  }\n\n  @if $position == stretch {\n    display: inline-block;\n    height: 100%;\n  }\n}\n\n@mixin align-content-fallback($position) {\n  @if $position == flex-start {\n    display: inline-block;\n  }\n\n  @if $position == flex-end {\n    display: table-cell;\n    vertical-align: bottom;\n\n    > * {\n      display: inline-block;\n    }\n  }\n\n  @if $position == center {\n    //display: table-cell;\n    //vertical-align: middle;\n\n    > * {\n      vertical-align: middle;\n      //display: inline-block;\n    }\n  }\n}\n\n@mixin flex-grow-fallback {\n  width: 100%;\n}\n\n@mixin flex-shrink-fallback {\n  width: 1px;\n}\n\n@mixin align-self-fallback($position) {\n  vertical-align: $position;\n}\n","$nav-height: 3rem;\n$nav-content-offset: .5rem;"],"sourceRoot":"/source/"}